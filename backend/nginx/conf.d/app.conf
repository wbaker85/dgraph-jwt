server {
  listen 80;

  server_name ~.;

  location /graphql {
    auth_request /_oauth2_token_introspection;
    auth_request_set $dgraph_token $upstream_http_x_dgraph_accesstoken;
    proxy_set_header	X-Dgraph-AccessToken		$dgraph_token;

    proxy_set_header	Host		$host;
    proxy_set_header	X-Real_IP	$remote_addr;
    proxy_pass http://Alpha:8080;
  }
  
  location /admin/schema {
    auth_request /_oauth2_token_introspection;
    proxy_set_header	Host		$host;
    proxy_set_header	X-Real_IP	$remote_addr;
    proxy_pass http://Alpha:8080/admin/schema;
  }
  
  location = /_oauth2_token_introspection {
    internal;
    proxy_method      POST;
    proxy_set_header	Host		$host;
    proxy_set_header	X-Real_IP	$remote_addr;
    proxy_pass        http://admin_server:4000/oauth/token;

    proxy_cache           token_responses;        # Enable caching
    proxy_cache_key       $http_authorization;    # Cache for each access token
    proxy_cache_lock      on;                     # Duplicate tokens must wait
    proxy_cache_valid     200 10s;                # How long to use each response
    proxy_ignore_headers  Cache-Control Expires Set-Cookie;
  }
}