version: '3.8'

services:
  traefik-graphpack:
    image: 'traefik:latest'
    command:
      - '--api.insecure=true'
      - '--providers.docker.swarmMode=true'
      - '--providers.docker.exposedbydefault=false'
      - '--providers.docker.network=proxy'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.web.http.redirections.entrypoint.to=websecure'
      - '--entrypoints.web.http.redirections.entrypoint.scheme=https'
      - '--entrypoints.websecure.address=:443'
      - '--certificatesresolvers.le.acme.tlschallenge=true'
      - '--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json'
      - '--certificatesresolvers.le.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory'
    ports:
      - target: 80
        published: 80
      - target: 443
        published: 443
      - target: 8080
        published: 8080
    volumes:
      - 'certs_graphpack:/letsencrypt'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    networks:
      - proxy
    deploy:
      placement:
        constraints:
          - node.role == manager

  admin_server:
    image: wbaker85/graphpack-admin:alpha
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.services.admin.loadbalancer.server.port=4000'
        - 'traefik.http.routers.admin.rule=Host(`admin.${DOMAIN}`)'
        - 'traefik.http.routers.admin.entrypoints=websecure'
        - 'traefik.http.routers.admin.tls.certresolver=le'
    networks:
      proxy:
        aliases:
          - admin_server

  mongo:
    image: mongo
    volumes:
      - ./database_files/mongo:/data/db
    networks:
      proxy:
        aliases:
          - mongo

  mongoadmin:
    image: mongo-express
    deploy:
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.services.mongo.loadbalancer.server.port=8081'
        - 'traefik.http.routers.mongo.rule=Host(`mongo.${DOMAIN}`)'
        - 'traefik.http.routers.mongo.entrypoints=websecure'
        - 'traefik.http.routers.mongo.tls.certresolver=le'
    networks:
      - proxy

volumes:
  certs_graphpack:

networks:
  proxy:
    name: proxy
